name: Terraform Infrastructure Management

on:
  push:
    branches: 
      - master
  workflow_dispatch:
    # inputs: 
    #   action: 
    #     description: "Terraform Action (init, plan, apply, destroy)"
    #     required: true
    #     default: "plan"
    #     type: choice
    #     options:
    #       - init
    #       - plan
    #       - apply
    #       - destroy
  # push:
  #   branches:
  #     - master   # Trigger on push to main branch
#     paths:
#       - 'IaC/**'  # Trigger when files in IaC folder change
#   pull_request:
#     branches:
#       - main  # Trigger on pull requests to the main branch
#     paths:
#       - 'IaC/**'  # Trigger when files in IaC folder change

env:
  ACTIONS_RUNNER_DEBUG: true
  AWS_REGION: ap-southeast-1
  AWS_ACCOUNT_ID: 905418236735
  #AWS_ECR_REPO: 905418236735.dkr.ecr.eu-north-1.amazonaws.com/ai-competency/chatbot-admin-dashboard

permissions:
  id-token: write
  contents: write
  security-events: write
  actions: read
  pull-requests: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    env:
      TF_VAR_nextauth_secret: ${{ secrets.NEXTAUTH_SECRET }}
      TF_VAR_db_url: ${{ secrets.DB_URL }}
      TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
      TF_VAR_jwt_secret_for_verify: ${{ secrets.JWT_SECRET_FOR_VERIFY }}
      TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
      TF_VAR_sender_password: ${{ secrets.SENDER_PASSWORD }}
      TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
      TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
      TF_VAR_session_token: ${{ secrets.SESSION_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.8  # Use the required Terraform version

    - name: Configure AWS OIDC Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-oidc-role
        aws-region: ${{ env.AWS_REGION }}      

    # - name: Initialize Terraform
    #   if: inputs.action == 'init'
    #   run: terraform init

    # - name: Terraform Plan
    #   if: inputs.action == 'plan'
    #   run: terraform plan

    # - name: Terraform Apply
    #   if: inputs.action == 'apply'
    #   run: terraform apply -auto-approve

    # - name: Terraform Destroy
    #   if: inputs.action == 'destroy'
    #   run: terraform destroy -auto-approve

    - name: Terraform Init
      run: |
        terraform init

    - name: Terraform Validate
      run: |
        terraform validate

    - name: Terraform Plan
      run: |
        terraform plan -out=tfplan

    - name: Save Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: tfplan

    # - name: Terraform Plan
    #   run: |
    #     terraform plan

    # - name: Terraform Apply
    #   run: |
    #     terraform apply -auto-approve

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Only runs on manual trigger
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-oidc-role
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Restore Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
  
      - name: Terraform Init (Backend S3)
        run: terraform init
  
      - name: Terraform Apply (Manual)
        run: terraform apply -auto-approve tfpla